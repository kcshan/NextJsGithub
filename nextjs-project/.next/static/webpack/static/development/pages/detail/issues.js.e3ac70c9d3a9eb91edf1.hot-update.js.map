{"version":3,"file":"static/webpack/static/development/pages/detail/issues.js.e3ac70c9d3a9eb91edf1.hot-update.js","sources":["webpack:///./components/WithRepoBasic.jsx"],"sourcesContent":["import Link from 'next/link'\nimport { withRouter } from 'next/router'\nimport Repo from './repo'\nimport api from '../lib/api'\n\nexport default (Comp, type = 'index') => {\n\n  const makeQuery = (queryObject) => {\n    const query = Object.entries(queryObject)\n    .reduce((result, entry) => {\n      result.push(entry.join('='))\n      return result\n    }, []).join('&')\n    return `?${query}`\n  }\n\n  const WithDetail = ({ router, repoBasic, ...rest }) => {\n    const query = makeQuery(router.query)\n  \n    return (\n      <div className=\"root\">\n        <div className=\"repo-basic\">\n          <Repo repo={repoBasic} />\n          <div className=\"tabs\">\n            {\n              type === 'index' ? \n              <span className=\"tab\">Readme</span> :\n              <Link href={`/detail${query}`}>\n                <a className=\"tab index\">Readme</a>\n              </Link>\n            }\n            {\n              type === 'issues' ? \n              <span className=\"tab\">Issues</span> :\n              <Link href={`/detail/issues${query}`}>\n                <a className=\"tab issues\">Issues</a>\n              </Link>\n            }\n          </div>\n        </div>\n        <div>\n          <Comp {...rest} />\n        </div>\n        <style jsx>{`\n          .root {\n            padding-top: 20px;\n          }  \n          .repo-basic {\n            padding: 20px;\n            border: 1px solid #eee;\n            margin-bottom: 20px;\n            border-radius: 5px;\n          }\n          .tab + .tab {\n            margin-left: 20px;\n          }\n        `}</style>\n      </div>\n    )\n  }\n  WithDetail.getInitialProps = async (context) => {\n\n    const { router, ctx } = context \n    const { owner, name } = ctx.query\n    const repoBasic = await api.request(\n      {\n        url: `/repos/${owner}/${name}`,\n      },\n      ctx.req,\n      ctx.res\n    )\n  \n    let pageData = {}\n    if (Comp.getInitialProps) {\n      pageData = await Comp.getInitialProps(context)\n    }\n\n    return {\n      repoBasic: repoBasic.data,\n      ...pageData\n    }\n  }\n\n  return withRouter(WithDetail)\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AApBA;AAAA;AAuCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AAAA;AAMA;AADA;AACA;AANA;AAIA;AAQA;AACA;AAbA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAcA;AACA;AAfA;AAAA;AAkBA;AAlBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAsBA;AACA;;;;A","sourceRoot":""}