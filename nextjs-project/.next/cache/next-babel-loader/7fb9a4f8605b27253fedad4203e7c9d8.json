{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport axios from 'axios';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst userInitialState = {};\nconst LOGOUT = 'LOGOUT';\n\nconst userReducer = (state = userInitialState, action) => {\n  switch (action.type) {\n    case LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nconst allReducers = combineReducers({\n  user: userReducer\n}); // action creators\n\nexport const logout = () => {\n  return dispatch => {\n    axios.post('/logout').then(resp => {\n      if (resp.status === 200) {\n        dispatch({\n          type: LOGOUT\n        });\n      } else {\n        console.log('logout failed', resp);\n      }\n    }).catch(err => {\n      console.log('logout failed', err);\n    });\n  };\n};\nexport default function initiallizeStore(state) {\n  const store = createStore(allReducers, _Object$assign({}, {\n    user: userInitialState\n  }, state), composeWithDevTools(applyMiddleware(ReduxThunk)));\n  return store;\n}","map":{"version":3,"sources":["/Users/yangshasha/Downloads/workspace/coding/nodejs/NextJsGithub/nextjs-project/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","ReduxThunk","axios","composeWithDevTools","userInitialState","LOGOUT","userReducer","state","action","type","allReducers","user","logout","dispatch","post","then","resp","status","console","log","catch","err","initiallizeStore","store"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,gBAAgB,GAAG,EAAzB;AAEA,MAAMC,MAAM,GAAG,QAAf;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,gBAAT,EAA2BI,MAA3B,KAAsC;AACxD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKJ,MAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAOE,KAAP;AAJJ;AAMD,CAPD;;AASA,MAAMG,WAAW,GAAGX,eAAe,CAAC;AAClCY,EAAAA,IAAI,EAAEL;AAD4B,CAAD,CAAnC,C,CAIA;;AACA,OAAO,MAAMM,MAAM,GAAG,MAAM;AAC1B,SAAOC,QAAQ,IAAI;AACjBX,IAAAA,KAAK,CAACY,IAAN,CAAW,SAAX,EACCC,IADD,CACMC,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACvBJ,QAAAA,QAAQ,CAAC;AACPJ,UAAAA,IAAI,EAAEJ;AADC,SAAD,CAAR;AAGD,OAJD,MAIO;AACLa,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,IAA7B;AACD;AACF,KATD,EAUCI,KAVD,CAUOC,GAAG,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BE,GAA7B;AACD,KAZD;AAaD,GAdD;AAeD,CAhBM;AAkBP,eAAe,SAASC,gBAAT,CAA0Bf,KAA1B,EAAiC;AAC9C,QAAMgB,KAAK,GAAGzB,WAAW,CACvBY,WADuB,EAEvB,eACE,EADF,EAEE;AACEC,IAAAA,IAAI,EAAEP;AADR,GAFF,EAKEG,KALF,CAFuB,EASvBJ,mBAAmB,CAACH,eAAe,CAACC,UAAD,CAAhB,CATI,CAAzB;AAWA,SAAOsB,KAAP;AACD","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport axios from 'axios'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst userInitialState = {}\n\nconst LOGOUT = 'LOGOUT'\n\nconst userReducer = (state = userInitialState, action) => {\n  switch(action.type) {\n    case LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nconst allReducers = combineReducers({\n  user: userReducer\n})\n\n// action creators\nexport const logout = () => {\n  return dispatch => {\n    axios.post('/logout')\n    .then(resp => {\n      if (resp.status === 200) {\n        dispatch({\n          type: LOGOUT\n        })\n      } else {\n        console.log('logout failed', resp)\n      }\n    })\n    .catch(err => {\n      console.log('logout failed', err)\n    })\n  }\n}\n\nexport default function initiallizeStore(state) {\n  const store = createStore( \n    allReducers,\n    Object.assign(\n      {}, \n      {\n        user: userInitialState\n      }, \n      state\n    ),\n    composeWithDevTools(applyMiddleware(ReduxThunk))\n  )\n  return store\n}"]},"metadata":{},"sourceType":"module"}