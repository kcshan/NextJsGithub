{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nvar initialState = {\n  count: 0\n};\nvar userInitialState = {\n  username: 'jokcy'\n};\nvar ADD = 'ADD';\n\nvar counterReducer = function counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD:\n      return {\n        count: state.count + (action.num || 1)\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar UPDATE_USERNAME = 'UPDATE_USERNAME';\n\nvar userReducer = function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_USERNAME:\n      return _objectSpread({}, state, {\n        username: action.name\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar allReducers = combineReducers({\n  counter: counterReducer,\n  user: userReducer\n});\nvar store = createStore(allReducers, {\n  counter: initialState,\n  user: userInitialState\n}, composeWithDevTools(applyMiddleware(ReduxThunk))); // action creator\n\nvar add = function add(num) {\n  return {\n    type: ADD,\n    num: num\n  };\n};\n\nvar addAsync = function addAsync(num) {\n  return function (dispatch) {\n    setTimeout(function () {\n      store.dispatch(add(num));\n    }, 1000);\n  };\n}; // console.log(store.getState())\n\n\nstore.dispatch(add(3)); // console.log(store.getState())\n\nstore.subscribe(function () {\n  console.log('changed', store.getState());\n}); // store.dispatch({ type: ADD })\n\nstore.dispatch(addAsync(5));\nstore.dispatch({\n  type: UPDATE_USERNAME,\n  name: 'thomas'\n});\nexport default function initiallizeStore(state) {\n  var store = createStore(allReducers, _Object$assign({\n    counter: initialState,\n    user: userInitialState\n  }, state), composeWithDevTools(applyMiddleware(ReduxThunk)));\n  return store;\n}","map":{"version":3,"sources":["/Users/yangshasha/Downloads/workspace/coding/nodejs/NextJsGithub/nextjs-project/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","ReduxThunk","composeWithDevTools","initialState","count","userInitialState","username","ADD","counterReducer","state","action","type","num","UPDATE_USERNAME","userReducer","name","allReducers","counter","user","store","add","addAsync","dispatch","setTimeout","subscribe","console","log","getState","initiallizeStore"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAE;AADa,CAAzB;AAIA,IAAMC,GAAG,GAAG,KAAZ;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACvD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKJ,GAAL;AACE,aAAO;AAAEH,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,IAAeM,MAAM,CAACE,GAAP,IAAc,CAA7B;AAAT,OAAP;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPD;;AASA,IAAMI,eAAe,GAAG,iBAAxB;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAsC;AAAA,MAArCL,KAAqC,uEAA7BJ,gBAA6B;AAAA,MAAXK,MAAW;;AACxD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKE,eAAL;AACE,+BACKJ,KADL;AAEEH,QAAAA,QAAQ,EAAEI,MAAM,CAACK;AAFnB;;AAIF;AACE,aAAON,KAAP;AAPJ;AASD,CAVD;;AAYA,IAAMO,WAAW,GAAGjB,eAAe,CAAC;AAClCkB,EAAAA,OAAO,EAAET,cADyB;AAElCU,EAAAA,IAAI,EAAEJ;AAF4B,CAAD,CAAnC;AAKA,IAAMK,KAAK,GAAGrB,WAAW,CAACkB,WAAD,EACvB;AACEC,EAAAA,OAAO,EAAEd,YADX;AAEEe,EAAAA,IAAI,EAAEb;AAFR,CADuB,EAKvBH,mBAAmB,CAACF,eAAe,CAACC,UAAD,CAAhB,CALI,CAAzB,C,CAQA;;AACA,IAAMmB,GAAG,GAAG,SAANA,GAAM,CAACR,GAAD,EAAS;AACnB,SAAO;AACLD,IAAAA,IAAI,EAAEJ,GADD;AAELK,IAAAA,GAAG,EAAHA;AAFK,GAAP;AAID,CALD;;AAOA,IAAMS,QAAQ,GAAG,SAAXA,QAAW,CAACT,GAAD,EAAS;AACxB,SAAO,UAACU,QAAD,EAAc;AACnBC,IAAAA,UAAU,CAAC,YAAM;AACfJ,MAAAA,KAAK,CAACG,QAAN,CAAeF,GAAG,CAACR,GAAD,CAAlB;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJD;AAKD,CAND,C,CAQA;;;AACAO,KAAK,CAACG,QAAN,CAAeF,GAAG,CAAC,CAAD,CAAlB,E,CACA;;AAEAD,KAAK,CAACK,SAAN,CAAgB,YAAM;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,KAAK,CAACQ,QAAN,EAAvB;AACD,CAFD,E,CAIA;;AACAR,KAAK,CAACG,QAAN,CAAeD,QAAQ,CAAC,CAAD,CAAvB;AACAF,KAAK,CAACG,QAAN,CAAe;AAAEX,EAAAA,IAAI,EAAEE,eAAR;AAAyBE,EAAAA,IAAI,EAAE;AAA/B,CAAf;AAEA,eAAe,SAASa,gBAAT,CAA0BnB,KAA1B,EAAiC;AAC9C,MAAMU,KAAK,GAAGrB,WAAW,CACvBkB,WADuB,EAEvB,eAAc;AACZC,IAAAA,OAAO,EAAEd,YADG;AAEZe,IAAAA,IAAI,EAAEb;AAFM,GAAd,EAGGI,KAHH,CAFuB,EAMvBP,mBAAmB,CAACF,eAAe,CAACC,UAAD,CAAhB,CANI,CAAzB;AAQA,SAAOkB,KAAP;AACD","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst initialState = {\n  count: 0\n}\n\nconst userInitialState = {\n  username: 'jokcy'\n}\n\nconst ADD = 'ADD'\nconst counterReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case ADD:\n      return { count: state.count + (action.num || 1) }\n    default:\n      return state\n  }\n}\n\nconst UPDATE_USERNAME = 'UPDATE_USERNAME'\nconst userReducer = (state = userInitialState, action) => {\n  switch(action.type) {\n    case UPDATE_USERNAME:\n      return {\n        ...state,\n        username: action.name\n      }\n    default:\n      return state\n  }\n}\n\nconst allReducers = combineReducers({\n  counter: counterReducer,\n  user: userReducer\n})\n\nconst store = createStore(allReducers, \n  {\n    counter: initialState,\n    user: userInitialState\n  },\n  composeWithDevTools(applyMiddleware(ReduxThunk))\n)\n\n// action creator\nconst add = (num) => {\n  return {\n    type: ADD,\n    num\n  }\n}\n\nconst addAsync = (num) => {\n  return (dispatch) => {\n    setTimeout(() => {\n      store.dispatch(add(num))\n    }, 1000);\n  }\n}\n\n// console.log(store.getState())\nstore.dispatch(add(3))\n// console.log(store.getState())\n\nstore.subscribe(() => {\n  console.log('changed', store.getState())\n})\n\n// store.dispatch({ type: ADD })\nstore.dispatch(addAsync(5))\nstore.dispatch({ type: UPDATE_USERNAME, name: 'thomas' })\n\nexport default function initiallizeStore(state) {\n  const store = createStore( \n    allReducers,\n    Object.assign({\n      counter: initialState,\n      user: userInitialState\n    }, state),\n    composeWithDevTools(applyMiddleware(ReduxThunk))\n  )\n  return store\n}"]},"metadata":{},"sourceType":"module"}