{"ast":null,"code":"import _Spin from \"antd/lib/spin\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Select from \"antd/lib/select\";\nimport React from \"react\";\nimport { useState, useCallback, useRef } from 'react';\nimport debounce from 'lodash/debounce';\nimport api from '../lib/api';\nvar Option = _Select.Option;\n\nvar SearchUser = function SearchUser(_ref) {\n  var onChange = _ref.onChange,\n      value = _ref.value;\n  // { current: 0 }\n  var lastFetchIdRef = useRef(0);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fetching = _useState2[0],\n      setFetching = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      options = _useState4[0],\n      setOptions = _useState4[1];\n\n  var fetchUser = useCallback(debounce(function (value) {\n    console.log('fetching user', value);\n    lastFetchIdRef.current += 1;\n    var fetchId = lastFetchIdRef.current;\n    setFetching(true);\n    setOptions([]);\n    api.request({\n      url: \"/search/users?q=\".concat(value)\n    }).then(function (resp) {\n      console.log('user', resp);\n\n      if (fetchId !== lastFetchIdRef.current) {\n        return;\n      }\n\n      var data = resp.data.items.map(function (user) {\n        return {\n          text: user.login,\n          value: user.login\n        };\n      });\n      setFetching(false);\n      setOptions(data);\n    });\n  }, 500), []);\n\n  var handleChange = function handleChange(value) {\n    setOptions([]);\n    setFetching(false);\n    onChange(value);\n  };\n\n  return React.createElement(_Select, {\n    style: {\n      width: 200\n    },\n    showSearch: true,\n    notFoundContent: fetching ? React.createElement(_Spin, {\n      size: \"small\"\n    }) : React.createElement(\"span\", null, \"nothing\"),\n    filterOption: false,\n    placeholder: \"\\u521B\\u5EFA\\u8005\",\n    onChange: handleChange,\n    value: value,\n    onSearch: fetchUser,\n    allowClear: true\n  }, options.map(function (op) {\n    return React.createElement(Option, {\n      value: op.value,\n      key: op.value\n    }, op.text);\n  }));\n};\n\nexport default SearchUser;","map":{"version":3,"sources":["/Users/yangshasha/Downloads/workspace/coding/nodejs/NextJsGithub/nextjs-project/components/SearchUser.jsx"],"names":["useState","useCallback","useRef","debounce","api","Option","SearchUser","onChange","value","lastFetchIdRef","fetching","setFetching","options","setOptions","fetchUser","console","log","current","fetchId","request","url","then","resp","data","items","map","user","text","login","handleChange","width","op"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,MAAhC,QAA8C,OAA9C;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,IAAMC,MAAM,GAAG,QAAOA,MAAtB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAyB;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC1C;AACA,MAAMC,cAAc,GAAGP,MAAM,CAAC,CAAD,CAA7B;;AAF0C,kBAGVF,QAAQ,CAAC,KAAD,CAHE;AAAA;AAAA,MAGnCU,QAHmC;AAAA,MAGzBC,WAHyB;;AAAA,mBAIZX,QAAQ,CAAC,EAAD,CAJI;AAAA;AAAA,MAInCY,OAJmC;AAAA,MAI1BC,UAJ0B;;AAM1C,MAAMC,SAAS,GAAGb,WAAW,CAACE,QAAQ,CACpC,UAAAK,KAAK,EAAI;AACPO,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BR,KAA7B;AACAC,IAAAA,cAAc,CAACQ,OAAf,IAA0B,CAA1B;AACA,QAAMC,OAAO,GAAGT,cAAc,CAACQ,OAA/B;AACAN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AAEAT,IAAAA,GAAG,CAACe,OAAJ,CAAY;AACVC,MAAAA,GAAG,4BAAqBZ,KAArB;AADO,KAAZ,EAGCa,IAHD,CAGM,UAAAC,IAAI,EAAI;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBM,IAApB;;AACA,UAAIJ,OAAO,KAAKT,cAAc,CAACQ,OAA/B,EAAwC;AACtC;AACD;;AACD,UAAMM,IAAI,GAAGD,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgBC,GAAhB,CAAoB,UAAAC,IAAI;AAAA,eAAK;AACxCC,UAAAA,IAAI,EAAED,IAAI,CAACE,KAD6B;AAExCpB,UAAAA,KAAK,EAAEkB,IAAI,CAACE;AAF4B,SAAL;AAAA,OAAxB,CAAb;AAIAjB,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,MAAAA,UAAU,CAACU,IAAD,CAAV;AACD,KAdD;AAeD,GAvBmC,EAwBpC,GAxBoC,CAAT,EAyB1B,EAzB0B,CAA7B;;AA2BA,MAAMM,YAAY,GAAG,SAAfA,YAAe,CAAArB,KAAK,EAAI;AAC5BK,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,IAAAA,QAAQ,CAACC,KAAD,CAAR;AACD,GAJD;;AAMA,SAAO;AACL,IAAA,KAAK,EAAE;AAAEsB,MAAAA,KAAK,EAAE;AAAT,KADF;AAEL,IAAA,UAAU,EAAE,IAFP;AAGL,IAAA,eAAe,EAAEpB,QAAQ,GAAG;AAAM,MAAA,IAAI,EAAC;AAAX,MAAH,GAA2B,4CAH/C;AAIL,IAAA,YAAY,EAAE,KAJT;AAKL,IAAA,WAAW,EAAC,oBALP;AAML,IAAA,QAAQ,EAAEmB,YANL;AAOL,IAAA,KAAK,EAAErB,KAPF;AAQL,IAAA,QAAQ,EAAEM,SARL;AASL,IAAA,UAAU,EAAE;AATP,KAYHF,OAAO,CAACa,GAAR,CAAY,UAAAM,EAAE;AAAA,WACZ,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,EAAE,CAACvB,KAAlB;AAAyB,MAAA,GAAG,EAAEuB,EAAE,CAACvB;AAAjC,OAAyCuB,EAAE,CAACJ,IAA5C,CADY;AAAA,GAAd,CAZG,CAAP;AAiBD,CAxDD;;AA0DA,eAAerB,UAAf","sourcesContent":["import { useState, useCallback, useRef } from 'react'\nimport { Select, Spin } from 'antd'\nimport debounce from 'lodash/debounce'\nimport api from '../lib/api'\n\nconst Option = Select.Option\n\nconst SearchUser = ({ onChange, value }) => {\n  // { current: 0 }\n  const lastFetchIdRef = useRef(0)\n  const [fetching, setFetching] = useState(false)\n  const [options, setOptions] = useState([])\n\n  const fetchUser = useCallback(debounce(\n    value => {\n      console.log('fetching user', value)\n      lastFetchIdRef.current += 1\n      const fetchId = lastFetchIdRef.current\n      setFetching(true)\n      setOptions([])\n\n      api.request({\n        url: `/search/users?q=${value}`\n      })\n      .then(resp => {\n        console.log('user', resp)\n        if (fetchId !== lastFetchIdRef.current) {\n          return \n        }\n        const data = resp.data.items.map(user => ({\n          text: user.login,\n          value: user.login\n        }))\n        setFetching(false)\n        setOptions(data)\n      })\n    }, \n    500\n  ), [])\n\n  const handleChange = value => {\n    setOptions([])\n    setFetching(false)\n    onChange(value)\n  }\n\n  return <Select\n    style={{ width: 200 }}\n    showSearch={true}\n    notFoundContent={fetching ? <Spin size=\"small\" /> : <span>nothing</span>}\n    filterOption={false}\n    placeholder=\"创建者\"\n    onChange={handleChange}\n    value={value}\n    onSearch={fetchUser}\n    allowClear={true}\n  >\n    {\n      options.map(op => (\n        <Option value={op.value} key={op.value}>{op.text}</Option>\n      ))\n    }\n  </Select>\n}\n\nexport default SearchUser"]},"metadata":{},"sourceType":"module"}