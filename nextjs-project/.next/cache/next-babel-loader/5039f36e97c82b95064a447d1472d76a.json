{"ast":null,"code":"import React from \"react\";\nimport MarkdownIt from 'markdown-it';\nimport { memo, useMemo } from 'react';\nimport 'github-markdown-css';\nvar md = new MarkdownIt({\n  html: true,\n  linkify: true\n});\n\nvar b64_to_utf8 = function b64_to_utf8(str) {\n  return decodeURIComponent(escape(atob(str)));\n};\n\nvar MarkdownRenderer = memo(function (_ref) {\n  var content = _ref.content,\n      isBase64 = _ref.isBase64;\n  var markdown = isBase64 ? b64_to_utf8(content) : content;\n  var html = useMemo(function () {\n    return md.render(markdown);\n  }, [markdown]);\n  return React.createElement(\"div\", {\n    className: \"markdown-body\"\n  }, React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: html\n    }\n  }));\n});\nexport default MarkdownRenderer;","map":{"version":3,"sources":["/Users/yangshasha/Downloads/workspace/coding/nodejs/NextJsGithub/nextjs-project/components/MarkdownRenderer.jsx"],"names":["MarkdownIt","memo","useMemo","md","html","linkify","b64_to_utf8","str","decodeURIComponent","escape","atob","MarkdownRenderer","content","isBase64","markdown","render","__html"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,aAAvB;AAEA,SAASC,IAAT,EAAeC,OAAf,QAA8B,OAA9B;AAEA,OAAO,qBAAP;AAEA,IAAMC,EAAE,GAAG,IAAIH,UAAJ,CAAe;AACxBI,EAAAA,IAAI,EAAE,IADkB;AAExBC,EAAAA,OAAO,EAAE;AAFe,CAAf,CAAX;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAS;AAC3B,SAAOC,kBAAkB,CAACC,MAAM,CAACC,IAAI,CAACH,GAAD,CAAL,CAAP,CAAzB;AACD,CAFD;;AAIA,IAAMI,gBAAgB,GAAGV,IAAI,CAAC,gBAA0B;AAAA,MAAvBW,OAAuB,QAAvBA,OAAuB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAEtD,MAAMC,QAAQ,GAAGD,QAAQ,GAAGP,WAAW,CAACM,OAAD,CAAd,GAA0BA,OAAnD;AAEA,MAAMR,IAAI,GAAGF,OAAO,CAAC;AAAA,WAAMC,EAAE,CAACY,MAAH,CAAUD,QAAV,CAAN;AAAA,GAAD,EAA4B,CAACA,QAAD,CAA5B,CAApB;AAEA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,uBAAuB,EAAE;AAAEE,MAAAA,MAAM,EAAEZ;AAAV;AAA9B,IADF,CADF;AAKD,CAX4B,CAA7B;AAaA,eAAeO,gBAAf","sourcesContent":["import MarkdownIt from 'markdown-it'\n\nimport { memo, useMemo } from 'react'\n\nimport 'github-markdown-css'\n\nconst md = new MarkdownIt({\n  html: true,\n  linkify: true\n})\n\nconst b64_to_utf8 = (str) => {\n  return decodeURIComponent(escape(atob(str)))\n}\n\nconst MarkdownRenderer = memo(({ content, isBase64}) => {\n\n  const markdown = isBase64 ? b64_to_utf8(content) : content\n\n  const html = useMemo(() => md.render(markdown), [markdown])\n\n  return (\n    <div className=\"markdown-body\">\n      <div dangerouslySetInnerHTML={{ __html: html }}/>\n    </div>\n  )\n})\n\nexport default MarkdownRenderer"]},"metadata":{},"sourceType":"module"}