{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport WithRepoBasic from '../../components/with-repo-basic';\nimport dynamic from 'next/dynamic';\n\nvar api = require('../../lib/api');\n\nvar MDrenderer = dynamic(function () {\n  return import('../../components/MarkdownRenderer');\n}, {\n  loading: function loading() {\n    return React.createElement(\"p\", null, \"Loading\");\n  },\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../components/MarkdownRenderer')];\n    },\n    modules: ['../../components/MarkdownRenderer']\n  }\n});\n\nvar Detail = function Detail(_ref) {\n  var readme = _ref.readme;\n  return React.createElement(MDrenderer, {\n    content: readme.content,\n    isBase64: true\n  });\n};\n\nDetail.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref2) {\n    var _ref2$ctx, _ref2$ctx$query, owner, name, req, res, readmeResp;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref2$ctx = _ref2.ctx, _ref2$ctx$query = _ref2$ctx.query, owner = _ref2$ctx$query.owner, name = _ref2$ctx$query.name, req = _ref2$ctx.req, res = _ref2$ctx.res;\n            _context.next = 3;\n            return api.request({\n              url: \"/repos/\".concat(owner, \"/\").concat(name, \"/readme\")\n            }, req, res);\n\n          case 3:\n            readmeResp = _context.sent;\n            return _context.abrupt(\"return\", {\n              readme: readmeResp.data\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default WithRepoBasic(Detail, 'index');","map":{"version":3,"sources":["/Users/yangshasha/Downloads/workspace/coding/nodejs/NextJsGithub/nextjs-project/pages/detail/index.js"],"names":["WithRepoBasic","dynamic","api","require","MDrenderer","loading","Detail","readme","content","getInitialProps","ctx","query","owner","name","req","res","request","url","readmeResp","data"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,kCAA1B;AACA,OAAOC,OAAP,MAAoB,cAApB;;AACA,IAAMC,GAAG,GAAGC,OAAO,CAAC,eAAD,CAAnB;;AAEA,IAAMC,UAAU,GAAGH,OAAO,CACxB;AAAA,SAAM,OAAO,mCAAP,CAAN;AAAA,CADwB,EAExB;AACEI,EAAAA,OAAO,EAAE;AAAA,WAAM,yCAAN;AAAA,GADX;AAAA;AAAA;AAAA,kCADa,mCACb;AAAA;AAAA,cADa,mCACb;AAAA;AAAA,CAFwB,CAA1B;;AAOA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC7B,SAAO,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,MAAM,CAACC,OAA5B;AAAqC,IAAA,QAAQ,EAAE;AAA/C,IAAP;AACD,CAFD;;AAIAF,MAAM,CAACG,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAyB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BAASC,GAAT,8BAAgBC,KAAhB,EAAyBC,KAAzB,mBAAyBA,KAAzB,EAAgCC,IAAhC,mBAAgCA,IAAhC,EAAwCC,GAAxC,aAAwCA,GAAxC,EAA6CC,GAA7C,aAA6CA,GAA7C;AAAA;AAAA,mBAEEb,GAAG,CAACc,OAAJ,CACvB;AACEC,cAAAA,GAAG,mBAAYL,KAAZ,cAAqBC,IAArB;AADL,aADuB,EAIvBC,GAJuB,EAKvBC,GALuB,CAFF;;AAAA;AAEjBG,YAAAA,UAFiB;AAAA,6CAUhB;AACLX,cAAAA,MAAM,EAAEW,UAAU,CAACC;AADd,aAVgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAenB,aAAa,CAACM,MAAD,EAAS,OAAT,CAA5B","sourcesContent":["import WithRepoBasic from '../../components/with-repo-basic'\nimport dynamic from 'next/dynamic'\nconst api = require('../../lib/api')\n\nconst MDrenderer = dynamic(\n  () => import('../../components/MarkdownRenderer'),\n  {\n    loading: () => <p>Loading</p>\n  }\n)\n\nconst Detail = ({ readme }) => {\n  return <MDrenderer content={readme.content} isBase64={true} />\n}\n\nDetail.getInitialProps = async ({ ctx: { query: { owner, name }, req, res } }) => {\n\n  const readmeResp = await api.request(\n    {\n      url: `/repos/${owner}/${name}/readme`\n    },\n    req,\n    res\n  )\n\n  return {\n    readme: readmeResp.data\n  }\n}\n\nexport default WithRepoBasic(Detail, 'index')"]},"metadata":{},"sourceType":"module"}