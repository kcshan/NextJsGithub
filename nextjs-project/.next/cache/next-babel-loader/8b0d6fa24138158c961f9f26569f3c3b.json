{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport App, { Container } from 'next/app';\nimport Layout from '../components/Layout';\nimport MyContext from '../lib/my-context';\nimport 'antd/dist/antd.css';\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      context: 'value'\n    });\n  }\n\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps;\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return React.createElement(Container, null, React.createElement(Layout, null, React.createElement(MyContext.Provider, {\n      value: this.state.context\n    }, React.createElement(Component, pageProps), React.createElement(\"button\", {\n      onClick: () => this.setState({\n        context: `${this.state.context}111`\n      })\n    }, \"update context\"))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/yangshasha/Downloads/workspace/coding/nodejs/NextJsGithub/nextjs-project/pages/_app.js"],"names":["App","Container","Layout","MyContext","MyApp","context","getInitialProps","Component","ctx","pageProps","render","props","state","setState"],"mappings":";;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,OAAO,oBAAP;;AAEA,MAAMC,KAAN,SAAoBJ,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCAEd;AACNK,MAAAA,OAAO,EAAE;AADH,KAFc;AAAA;;AAMtB,eAAaC,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,QAAIC,SAAJ;;AACA,QAAIF,SAAS,CAACD,eAAd,EAA+B;AAC7BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;AACD;;AACD,WAAO;AACLC,MAAAA;AADK,KAAP;AAGD;;AAEDC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEH,MAAAA,SAAF;AAAaE,MAAAA;AAAb,QAA2B,KAAKE,KAAtC;AAEA,WACE,oBAAC,SAAD,QACE,oBAAC,MAAD,QACE,oBAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWP;AAAtC,OACE,oBAAC,SAAD,EAAeI,SAAf,CADF,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKI,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAG,GAAE,KAAKO,KAAL,CAAWP,OAAQ;AAAjC,OAAd;AAAvB,wBAFF,CADF,CADF,CADF;AAUD;;AA7BqB;;AAgCxB,eAAeD,KAAf","sourcesContent":["import App, { Container } from 'next/app'\n\nimport Layout from '../components/Layout'\n\nimport MyContext from '../lib/my-context'\n\nimport 'antd/dist/antd.css'\n\nclass MyApp extends App {\n\n  state = {\n    context: 'value'\n  }\n\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n    return {\n      pageProps\n    }\n  }\n\n  render () {\n    const { Component, pageProps } = this.props\n    \n    return (\n      <Container>\n        <Layout> \n          <MyContext.Provider value={this.state.context}>\n            <Component {...pageProps} />\n            <button onClick={() => this.setState({ context: `${this.state.context}111`})}>update context</button>\n          </MyContext.Provider>\n        </Layout>\n      </Container>\n    )\n  }\n}\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}