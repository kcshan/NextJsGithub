{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs2/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\"));\n\n// 即在客户端执行 又在服务端执行\nvar axios = require('axios');\n\nvar github_base_url = 'https://api.github.com';\n\nvar requestGithub =\n/*#__PURE__*/\nfunction () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee(method, url, data, headers) {\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios({\n              method: method,\n              url: \"\".concat(github_base_url).concat(url),\n              data: data,\n              headers: headers\n            });\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function requestGithub(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar isServer = typeof window === 'undefined';\n\nvar request =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee2(_ref2, req, res) {\n    var _ref2$method, method, url, _ref2$data, data, session, githubAuth, headers;\n\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _ref2$method = _ref2.method, method = _ref2$method === void 0 ? 'GET' : _ref2$method, url = _ref2.url, _ref2$data = _ref2.data, data = _ref2$data === void 0 ? {} : _ref2$data;\n\n            if (url) {\n              _context2.next = 3;\n              break;\n            }\n\n            throw Error('url must provide');\n\n          case 3:\n            if (!isServer) {\n              _context2.next = 13;\n              break;\n            }\n\n            session = req.session;\n            githubAuth = session.githubAuth || {};\n            headers = {};\n\n            if (githubAuth.access_token) {\n              headers['Authorization'] = \"\".concat(githubAuth.token_type, \" \").concat(githubAuth.access_token);\n            }\n\n            _context2.next = 10;\n            return requestGithub(method, url, data, headers);\n\n          case 10:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 13:\n            _context2.next = 15;\n            return axios({\n              method: method,\n              url: \"/github\".concat(url),\n              data: data\n            });\n\n          case 15:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function request(_x5, _x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nmodule.exports = {\n  request: request,\n  requestGithub: requestGithub\n};","map":{"version":3,"sources":["/Users/yangshasha/Downloads/workspace/coding/nodejs/NextJsGithub/nextjs-project/lib/api.js"],"names":["axios","require","github_base_url","requestGithub","method","url","data","headers","isServer","window","request","req","res","Error","session","githubAuth","access_token","token_type","module","exports"],"mappings":";;;;;;;;AAAA;AACA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,eAAe,GAAG,wBAAxB;;AAEA,IAAMC,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,iBAAOC,MAAP,EAAeC,GAAf,EAAoBC,IAApB,EAA0BC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPP,KAAK,CAAC;AACjBI,cAAAA,MAAM,EAANA,MADiB;AAEjBC,cAAAA,GAAG,YAAKH,eAAL,SAAuBG,GAAvB,CAFc;AAGjBC,cAAAA,IAAI,EAAJA,IAHiB;AAIjBC,cAAAA,OAAO,EAAPA;AAJiB,aAAD,CADE;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbJ,aAAa;AAAA;AAAA;AAAA,GAAnB;;AASA,IAAMK,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAnC;;AACA,IAAMC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,yBAA2CC,GAA3C,EAAgDC,GAAhD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iCAASR,MAAT,EAASA,MAAT,6BAAkB,KAAlB,iBAAyBC,GAAzB,SAAyBA,GAAzB,qBAA8BC,IAA9B,EAA8BA,IAA9B,2BAAqC,EAArC;;AAAA,gBACTD,GADS;AAAA;AAAA;AAAA;;AAAA,kBAENQ,KAAK,CAAC,kBAAD,CAFC;;AAAA;AAAA,iBAIVL,QAJU;AAAA;AAAA;AAAA;;AAKNM,YAAAA,OALM,GAKIH,GAAG,CAACG,OALR;AAMNC,YAAAA,UANM,GAMOD,OAAO,CAACC,UAAR,IAAsB,EAN7B;AAONR,YAAAA,OAPM,GAOI,EAPJ;;AASZ,gBAAIQ,UAAU,CAACC,YAAf,EAA6B;AAC3BT,cAAAA,OAAO,CAAC,eAAD,CAAP,aAA8BQ,UAAU,CAACE,UAAzC,cAAuDF,UAAU,CAACC,YAAlE;AACD;;AAXW;AAAA,mBAYCb,aAAa,CAACC,MAAD,EAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,CAZd;;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAeCP,KAAK,CAAC;AACjBI,cAAAA,MAAM,EAANA,MADiB;AAEjBC,cAAAA,GAAG,mBAAYA,GAAZ,CAFc;AAGjBC,cAAAA,IAAI,EAAJA;AAHiB,aAAD,CAfN;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPI,OAAO;AAAA;AAAA;AAAA,GAAb;;AAsBAQ,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA,OAAO,EAAPA,OADe;AAEfP,EAAAA,aAAa,EAAbA;AAFe,CAAjB","sourcesContent":["// 即在客户端执行 又在服务端执行\nconst axios = require('axios')\nconst github_base_url = 'https://api.github.com'\n\nconst requestGithub = async (method, url, data, headers) => {\n  return await axios({\n    method,\n    url: `${github_base_url}${url}`,\n    data,\n    headers\n  })\n}\n\nconst isServer = typeof window === 'undefined'\nconst request = async ({ method = 'GET', url, data = {} }, req, res) => {\n  if (!url) {\n    throw Error('url must provide')\n  }\n  if (isServer) {\n    const session = req.session\n    const githubAuth = session.githubAuth || {}\n    const headers = {}\n\n    if (githubAuth.access_token) {\n      headers['Authorization'] = `${githubAuth.token_type} ${githubAuth.access_token}`\n    }\n    return await requestGithub(method, url, data, headers)\n  } else {\n    // /github/search/respos\n    return await axios({\n      method,\n      url: `/github${url}`,\n      data\n    })\n  }\n}\nmodule.exports = {\n  request,\n  requestGithub\n}"]},"metadata":{},"sourceType":"script"}